<server xmlns="http://mina.apache.org/ftpserver/spring/v1"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
        xsi:schemaLocation="http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd"
        id="server"
        max-logins="500"
        anon-enabled="false"
        max-anon-logins="123"
        max-login-failures="124"
        login-failure-delay="125">
    <listeners>
        <nio-listener name="default" port="2222" implicit-ssl="true" idle-timeout="60" local-address="1.2.3.4">
            <ssl>
                <keystore file="mykeystore.jks" password="secret" key-password="otherSecret"/>
                <truststore file="mytruststore.jks" password="secret"/>
            </ssl>
            <data-connection idle-timeout="60">
                <active enabled="true" local-address="1.2.3.4" local-port="2323" ip-check="true"/>
                <passive ports="123-12" address="1.2.3.4" external-address="1.2.3.4"/>
            </data-connection>
            <blacklist>1.2.3.0/16, 1.2.4.0/16, 1.2.3.4</blacklist>
        </nio-listener>
    </listeners>
    <db-user-manager encrypt-passwords="salted">
        <data-source>
            <beans:bean class="some.datasoure.class"/>
        </data-source>
        <insert-user>INSERT INTO FTP_USER (userid, userpassword,
            homedirectory, enableflag, writepermission, idletime, uploadrate,
            downloadrate) VALUES ('{userid}', '{userpassword}', '{homedirectory}',
            '{enableflag}', '{writepermission}', {idletime}, {uploadrate},
            {downloadrate})
        </insert-user>
        <update-user>
            UPDATE FTP_USER SET
            userpassword='{userpassword}',
            homedirectory='{homedirectory}',
            enableflag={enableflag},
            writepermission={writepermission},
            idletime={idletime},
            uploadrate={uploadrate},
            downloadrate={downloadrate}
            WHERE userid='{userid}'
        </update-user>
        <delete-user>
            DELETE FROM FTP_USER WHERE userid = '{userid}'
        </delete-user>
        <select-user>
            SELECT userid, userpassword, homedirectory,
            enableflag, writepermission, idletime, uploadrate, downloadrate
            FROM FTP_USER
            WHERE userid = '{userid}'
        </select-user>
        <select-all-users>
            SELECT userid FROM FTP_USER ORDER BY userid
        </select-all-users>
        <is-admin>
            SELECT userid
            FROM FTP_USER
            WHERE userid='{userid}' AND userid='admin'
        </is-admin>
        <authenticate>SELECT userpassword from FTP_USER WHERE userid='{userid}'</authenticate>
    </db-user-manager>
</server>